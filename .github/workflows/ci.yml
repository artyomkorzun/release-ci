name: CI

on:
  push:
    branches:  release-*

jobs:
  prepare:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b workflow-$GITHUB_RUN_ID
          versionSnapshot=`grep 'version=' gradle.properties | sed 's/version=\([^-]*\)/\1/'`
          versionRelease=`echo $versionSnapshot | sed 's/\([^-]*\)-SNAPSHOT/\1/'`
          versionSnapshotNext=`echo $versionSnapshot | perl -pe 's/^((\d+\.)*)(\d+)(.*)$/$1.($3+1).$4/e'`
          echo "$versionSnapshot -> $versionRelease  -> $versionSnapshotNext"
          sed -i "s/version=$versionSnapshot/version=$versionRelease/" gradle.properties
          git commit -am "[skip-ci] Generate release version"
          sed -i "s/version=$versionRelease/version=$versionSnapshotNext/" gradle.properties
          git commit -am "[skip-ci] Generate next snapshot version"
          git push origin HEAD
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Release
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          git checkout -b workflow-$GITHUB_RUN_ID origin/workflow-$GITHUB_RUN_ID~1
          versionRelease=`grep 'version=' gradle.properties | sed 's/version=\([^-]*\)/\1/'`
          echo $versionRelease
          git tag $versionRelease
          git push origin $versionRelease
          git push origin origin/workflow-$GITHUB_RUN_ID:$GITHUB_REF
  cleanup:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cleanup
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git push origin --delete workflow-$GITHUB_RUN_ID